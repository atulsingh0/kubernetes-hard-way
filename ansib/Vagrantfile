# -*- mode: ruby -*-
# vi:set ft=ruby sw=2 ts=2 sts=2:

# Define the number of master and worker nodes
# If this number is changed, remember to update setup-hosts.sh script with the new hosts IP details in /etc/hosts of each VM.
NUM_MASTER_NODE = 1
SSH_KEY_PATH="File.expand_path('~')/.ssh/"
SSH_KEY="id_ed25519.pub"

IP_NW = "192.168.56."
MASTER_IP_START = 10

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
  # config.vm.box = "base"
  config.vm.box = "ubuntu/bionic64"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  config.vm.box_check_update = false

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  # config.vm.provider "virtualbox" do |vb|
  #   # Customize the amount of memory on the VM:
  #   vb.memory = "1024"
  # end
  #
  # View the documentation for the provider you are using for more
  # information on available options.


  # Provision Master Nodes
  (1..NUM_MASTER_NODE).each do |i|
      config.vm.define "test0#{i}" do |node|
        # Name shown in the GUI
        node.vm.provider "virtualbox" do |vb|
            vb.name = "test0#{i}"
            vb.memory = 2048
            vb.cpus = 2
            vb.customize [ "modifyvm", :id, "--uartmode1", "disconnected" ]
        end
        node.vm.hostname = "test0#{i}"
        node.vm.network :private_network, ip: IP_NW + "#{MASTER_IP_START + i}"
        node.vm.network "forwarded_port", guest: 22, host: "#{2710 + i}"

        # Copying SSH Key
        #config.vm.provision "shell", inline: "mkdir -p ~/.ssh && chmod 700 ~/.ssh"
        #config.vm.provision "file", source: "#{SSH_KEY_PATH}#{SSH_KEY}", destination: "~/.ssh/#{SSH_KEY}"
        config.vm.provision "copy ssh public key", type: "shell" do |s|
          ssh_pub_key = File.readlines("#{File.expand_path('~')}/.ssh/#{SSH_KEY}").first.strip
          s.inline = <<-EOL
          if grep -sq "#{ssh_pub_key}" /home/vagrant/.ssh/authorized_keys; then
            echo "SSH keys already provisioned."
            exit 0;
          fi
          echo "SSH key provisioning."
          mkdir -p /home/vagrant/.ssh/
          echo #{ssh_pub_key} >> /home/vagrant/.ssh/authorized_keys
          chown -R vagrant:vagrant /home/vagrant

          sudo mkdir -p /home/root/.ssh/
          sudo echo #{ssh_pub_key} >> /root/.ssh/authorized_keys
          exit 0
          EOL
          end
      end
  end
end
